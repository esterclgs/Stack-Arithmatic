/*
 * 1. Ester Caroline Lumban Gaol : 1717051002
 * 2. Rhama Shandy 		 : 1717051018
 * 3. Rayhan Syahrindra		 : 1717051038
 * 4. Renaldi Kumar Mahendra	 : 1717051050
 */


#include <iostream>
#include <cstring>
using namespace std;
Template <typename T>
class stack{
	T *data;
	int size;
	int top;
public:
	stack(){
	size=0;
	data=new T[size];
	top=0;}
	
	stack(int s){
	size=s;
	data=new T[size];
	top=0;}

	bool isFull(){
	return (top==size);}
	
	bool isEmpty(){
	return (top==0);}
	
	bool push(T x){
	if(isFull())
	tambahlagi();

	data[top++]=x;
	return true;
	}
	operators.push(x);
	operators.push(input[i]);
	break;
	}
	
	bool pop(T &x){
	if(isEmpty())

	return false;
	x=data[--top];
	return true;
	}


	void tambahlagi(){
		T *temp=new T[size];
	for (int i=0;i<size;i++)
		temp[i]=data[i];
		delete data;
		data=new T[++size];
	for (int i=0;i<size-1;i++)
		data[i]=temp[i];
		delete temp;
	}
	void BalikUrutan(){
		char x;
		stack<char> temp(size);
		while(!isEmpty()){
		pop(x);
		temp.push(x);
		}
		*this=temp;
	}
};


bool cekoperator(char a,char b)
{
	if(a=='(' || b=='(')
	return true;
	if( (a=='*' || a=='/') && (b=='+' || b=='-') )
		return true;
	return false;
}

stack<char> postfix(char input[]){
	
	stack<char> post_fix;
	stack<char> operators;
	char x;
	bool isNumber=false;
	for (int i=0;i<strlen(input);i++){
	if(input[i]>='0' && input[i]<='9'){
	post_fix.push(input[i]);
	isNumber=true;
	}
	else{
	if(isNumber==true){
	x='#';
	post_fix.push(x);
	isNumber=false;
	}
	if(input[i]==')'){
		operators.pop(x);
		while(x!='('){
		post_fix.push(x);
		operators.pop(x);
	}
	}
	else{
	if(input[i]=='+' || input[i]=='-' || input[i]=='*' || input[i]=='/' || input[i]=='('){
	   if(operators.isEmpty())
		operators.push(input[i]);
	   else{
		while(!operators.isEmpty()){
		operators.pop(x);
	   if(cekoperator(input[i],x)){
		else
		post_fix.push(x);
		}
		if(operators.isEmpty())
		operators.push(input[i]);
		}
		}
		}
		}
		}
	while(!operators.isEmpty()){
	operators.pop(x);
	if(x=='(')
	continue;
	post_fix.push(x);
	}
	return post_fix;
}
float EVALUATE(stack<char> post_fix)
{
	float num=0,temp_num=0,op1,op2,result=0;
	char x;
	bool isNumber;
	stack<float> operands;
	while(!post_fix.isEmpty()){
		post_fix.pop(x);
		if(x>='0' && x<='9'){
			isNumber=true;
			temp_num=x-48;
			num*=10;
			num+=temp_num;
		}
		else{
			if(isNumber==true){
			operands.push(num);
			isNumber=false;
			num=0;
			}
			
		if(x!='#'){
	                operands.pop(op2);
	                perands.pop(op1);
	                if(x=='+')

			
	
